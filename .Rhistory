"All_Other_Percent_GLD_2016_LA",
"SEN_Percent_GLD_2016_LA",
"FSM_gap_GLD_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_within_LA",
"All_Other_gap_GLD_2016_LA",
"SEN_gap_GLD_2016_LA"),
funs(Suppress_to_minus9999(LA_Name,selected_LA="City of London",.))) %>%
replace_with_na_at(.vars=c("SEN_Percent_GLD_2018_LA",
"SEN_gap_GLD_2018_LA",
"SEN_Percent_GLD_2017_LA",
"SEN_gap_GLD_2017_LA",
"FSM_Percent_GLD_2016_LA",
"All_Other_Percent_GLD_2016_LA",
"SEN_Percent_GLD_2016_LA",
"FSM_gap_GLD_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_within_LA",
"All_Other_gap_GLD_2016_LA",
"SEN_gap_GLD_2016_LA"),condition =~.x== -9999)
# For City of London suppress relevant AoL variables
three_years_data_step1_rev4  <- three_years_data_step1_rev3 %>% mutate_at(vars("All_Other_Percent_AoL_CL_2016_LA",
#"All_Other_Percent_AoL_CL_2017_LA",
"FSM_Percent_AoL_CL_2016_LA",
#"FSM_Percent_AoL_CL_2017_LA",
"All_Other_Percent_AoL_Lit_2016_LA",
#"All_Other_Percent_AoL_Lit_2017_LA",
"FSM_Percent_AoL_Lit_2016_LA",
#"FSM_Percent_AoL_Lit_2017_LA",
"All_Other_Percent_AoL_Mat_2016_LA",
#"All_Other_Percent_AoL_Mat_2017_LA",
"FSM_Percent_AoL_Mat_2016_LA",
#"FSM_Percent_AoL_Mat_2017_LA",
#"FSM_gap_AoL_CL_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_CL_2017_LA_gap_within_LA",
"FSM_gap_AoL_CL_2016_LA_gap_within_LA",
#"FSM_gap_AoL_CL_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_CL_2017_LA",
"All_Other_gap_AoL_CL_2016_LA",
#"FSM_gap_AoL_Lit_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_Lit_2017_LA_gap_within_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_within_LA",
#"FSM_gap_AoL_Lit_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_Lit_2017_LA",
"All_Other_gap_AoL_Lit_2016_LA",
#"FSM_gap_AoL_Mat_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_Mat_2017_LA_gap_within_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_within_LA",
#"FSM_gap_AoL_Mat_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_Mat_2017_LA",
"All_Other_gap_AoL_Mat_2016_LA"
),funs(Suppress_to_minus9999(LA_Name,selected_LA="City of London",.)))   %>%
#),funs(Suppress_to_minus9999(LA_Name,selected_LA %in% c("City of London","Kensington and Chelsea"),.)))   %>% #doesn't work
replace_with_na_at(.vars=c("All_Other_Percent_AoL_CL_2016_LA",
#"All_Other_Percent_AoL_CL_2017_LA",
"FSM_Percent_AoL_CL_2016_LA",
#"FSM_Percent_AoL_CL_2017_LA",
"All_Other_Percent_AoL_Lit_2016_LA",
#"All_Other_Percent_AoL_Lit_2017_LA",
"FSM_Percent_AoL_Lit_2016_LA",
#"FSM_Percent_AoL_Lit_2017_LA",
"All_Other_Percent_AoL_Mat_2016_LA",
#"All_Other_Percent_AoL_Mat_2017_LA",
"FSM_Percent_AoL_Mat_2016_LA",
#"FSM_Percent_AoL_Mat_2017_LA",
#"FSM_gap_AoL_CL_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_CL_2017_LA_gap_within_LA",
"FSM_gap_AoL_CL_2016_LA_gap_within_LA",
#"FSM_gap_AoL_CL_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_CL_2017_LA",
"All_Other_gap_AoL_CL_2016_LA",
#"FSM_gap_AoL_Lit_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_Lit_2017_LA_gap_within_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_within_LA",
#"FSM_gap_AoL_Lit_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_Lit_2017_LA",
"All_Other_gap_AoL_Lit_2016_LA",
#"FSM_gap_AoL_Mat_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_Mat_2017_LA_gap_within_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_within_LA",
#"FSM_gap_AoL_Mat_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_Mat_2017_LA",
"All_Other_gap_AoL_Mat_2016_LA"
),condition =~.x== -9999)
# For City of London suppress relevant AoL variables
three_years_data_step1_rev5  <- three_years_data_step1_rev4 %>% mutate_at(vars("All_Other_Percent_AoL_CL_2016_LA",
#"All_Other_Percent_AoL_CL_2017_LA",
"FSM_Percent_AoL_CL_2016_LA",
#"FSM_Percent_AoL_CL_2017_LA",
"All_Other_Percent_AoL_Lit_2016_LA",
#"All_Other_Percent_AoL_Lit_2017_LA",
"FSM_Percent_AoL_Lit_2016_LA",
#"FSM_Percent_AoL_Lit_2017_LA",
"All_Other_Percent_AoL_Mat_2016_LA",
#"All_Other_Percent_AoL_Mat_2017_LA",
"FSM_Percent_AoL_Mat_2016_LA",
#"FSM_Percent_AoL_Mat_2017_LA",
#"FSM_gap_AoL_CL_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_CL_2017_LA_gap_within_LA",
"FSM_gap_AoL_CL_2016_LA_gap_within_LA",
#"FSM_gap_AoL_CL_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_CL_2017_LA",
"All_Other_gap_AoL_CL_2016_LA",
#"FSM_gap_AoL_Lit_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_Lit_2017_LA_gap_within_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_within_LA",
#"FSM_gap_AoL_Lit_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_Lit_2017_LA",
"All_Other_gap_AoL_Lit_2016_LA",
#"FSM_gap_AoL_Mat_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_Mat_2017_LA_gap_within_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_within_LA",
#"FSM_gap_AoL_Mat_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_Mat_2017_LA",
"All_Other_gap_AoL_Mat_2016_LA"
),funs(Suppress_to_minus9999(LA_Name,selected_LA="Kensington and Chelsea",.)))   %>%
#),funs(Suppress_to_minus9999(LA_Name,selected_LA %in% c("City of London","Kensington and Chelsea"),.)))   %>% #doesn't work
replace_with_na_at(.vars=c("All_Other_Percent_AoL_CL_2016_LA",
#"All_Other_Percent_AoL_CL_2017_LA",
"FSM_Percent_AoL_CL_2016_LA",
#"FSM_Percent_AoL_CL_2017_LA",
"All_Other_Percent_AoL_Lit_2016_LA",
#"All_Other_Percent_AoL_Lit_2017_LA",
"FSM_Percent_AoL_Lit_2016_LA",
#"FSM_Percent_AoL_Lit_2017_LA",
"All_Other_Percent_AoL_Mat_2016_LA",
#"All_Other_Percent_AoL_Mat_2017_LA",
"FSM_Percent_AoL_Mat_2016_LA",
#"FSM_Percent_AoL_Mat_2017_LA",
#"FSM_gap_AoL_CL_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_CL_2017_LA_gap_within_LA",
"FSM_gap_AoL_CL_2016_LA_gap_within_LA",
#"FSM_gap_AoL_CL_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_CL_2017_LA",
"All_Other_gap_AoL_CL_2016_LA",
#"FSM_gap_AoL_Lit_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_Lit_2017_LA_gap_within_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_within_LA",
#"FSM_gap_AoL_Lit_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_Lit_2017_LA",
"All_Other_gap_AoL_Lit_2016_LA",
#"FSM_gap_AoL_Mat_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_Mat_2017_LA_gap_within_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_within_LA",
#"FSM_gap_AoL_Mat_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_Mat_2017_LA",
"All_Other_gap_AoL_Mat_2016_LA"
),condition =~.x== -9999)
three_years_data_step1_rev6<- three_years_data_step1_rev5  %>% select(-contains("Rank"))# believe not used anywhere so remove
fwrite(long_data_step1_rev_2_4_3,"../Outputs/combined_long_data_2018_R_v5_postbeta_sup.csv")
fwrite(three_years_data_step1_rev5,"../Outputs/combined_three_years_data_2018_R_v5_postbeta_sup.csv")
shiny::runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
library(tidyverse)
library(rlang)
library(naniar) # replace zero with na functions
library(data.table)
relative_fp_long_data<- "../Outputs/combined_long_data_2018_R_v5_postbeta.csv"  # this has data for current years including statistical neighbours
relative_fp_three_years<- "../Outputs/combined_three_years_data_2018_R_v5_postbeta.csv"  # this has trend data
#retrieve data
long_data_step1<- read_csv(relative_fp_long_data)
three_years_data_step1 <- read_csv(relative_fp_three_years)
Suppress_to_minus9999 <- function(LA, selected_LA, variable_name) {
# variable_name_sym<- sym(variable_name)
# dataset_rev_1<- dataset  %>%
#   mutate(!!quo_name(variable_name):=if_else(LA_Name==selected_LA,0,!!variable_name_sym))
#
variable_name<-if_else(LA==selected_LA,-9999,variable_name)
as.numeric(variable_name)
# make zeros nulls
# if(variable_name==0){variable_name<-NA}
}
Correct_rank <- function(SN_LA="",LA, selected_LA, variable_name, min_rank,min_variable,lowest_rank) {
# Function to change the rank of selected_LA, the suppressed LA to min_rank, then reduce other ranks by one
# This assumes the IoS is the top rank which may not be true for subsequent years
changed_rank<- if_else(min_variable==-9999,min_rank,lowest_rank)
variable_name<- if_else(LA==selected_LA,changed_rank,  (variable_name-1))
if(SN_LA!=""){ # This section is for stats neighbours
#changed_rank<- if_else(min_variable==0,min_rank,lowest_rank)
variable_name<- if_else(LA==selected_LA&SN_LA==selected_LA,changed_rank,
if_else(LA==selected_LA&SN_LA!=selected_LA,(variable_name-1),variable_name))
variable_name
}
variable_name
}
#Suppress CoL Data for SEN support
long_data_step1_rev_1_1<- long_data_step1 %>%
mutate_at(
vars(
"SEN_Percent_GLD_2018_LA",
"SEN_gap_GLD_2018_LA"
),
funs(Suppress_to_minus9999(LA_Name,selected_LA="City of London",.))) %>%
replace_with_na_at(.vars =c(
"SEN_Percent_GLD_2018_LA",
"SEN_gap_GLD_2018_LA"
), condition =~.x== -9999 )
# Check variables are now NA
long_data_step1 %>% filter(LA_Name%in%c("Isles of Scilly","City of London")) %>% select(LA_Name,All_Percent_GLD_2018_LA,All_Other_Percent_GLD_2018_LA,SEN_Percent_GLD_2018_LA,
All_gap_GLD_2018_LA,All_Other_gap_GLD_2018_LA,SEN_gap_GLD_2018_LA, FSM_Percent_GLD_2018_LA )
long_data_step1_rev_1 %>% filter(LA_Name%in%c("Isles of Scilly","City of London")) %>% select(LA_Name,All_Percent_GLD_2018_LA,All_Other_Percent_GLD_2018_LA,SEN_Percent_GLD_2018_LA,
All_gap_GLD_2018_LA,All_Other_gap_GLD_2018_LA,SEN_gap_GLD_2018_LA, FSM_Percent_GLD_2018_LA )
long_data_step1_rev_1_1 %>% filter(LA_Name%in%c("Isles of Scilly","City of London")) %>% select(LA_Name,All_Percent_GLD_2018_LA,All_Other_Percent_GLD_2018_LA,SEN_Percent_GLD_2018_LA,
All_gap_GLD_2018_LA,All_Other_gap_GLD_2018_LA,SEN_gap_GLD_2018_LA, FSM_Percent_GLD_2018_LA )
long_data_step1_rev_subset_CoL<- long_data_step1_rev_1_1 %>% filter(LA_Name=="City of London") %>%
select(LEA_NAME,LA_Name,
SEN_SN_Rank_GLD_2018_LA_CoL=SEN_SN_Rank_GLD_2018_LA,
SEN_Rank_GLD_2018_LA_CoL=SEN_Rank_GLD_2018_LA,
SEN_gap_Rank_GLD_2018_LA_CoL=SEN_gap_Rank_GLD_2018_LA
)
long_data_step1_rev_subset_CoL_SN_rank<- long_data_step1_rev_subset_CoL%>% select(LEA_NAME,LA_Name,
SEN_SN_Rank_GLD_2018_LA_CoL)
long_data_step1_rev_subset_CoL_rank<-long_data_step1_rev_subset_CoL%>% select(
SEN_Rank_GLD_2018_LA_CoL,SEN_gap_Rank_GLD_2018_LA_CoL) %>% distinct()
#NB some redundant steps can be removed at a later stage
SEN_Rank_GLD_2018_LA_CoL_value<-long_data_step1_rev_subset_CoL%>% select(SEN_Rank_GLD_2018_LA_CoL) %>% distinct() %>% as.numeric()
SEN_gap_Rank_GLD_2018_LA_CoL_value<-long_data_step1_rev_subset_CoL%>% select(SEN_gap_Rank_GLD_2018_LA_CoL) %>% distinct() %>% as.numeric()
SEN_Rank_GLD_2018_LA_CoL_value
SEN_gap_Rank_GLD_2018_LA_CoL_value
long_data_step1_rev_2_3<- long_data_step1_rev_1_1 %>% left_join(.,long_data_step1_rev_subset_CoL_SN_rank, by="LEA_NAME") %>%
select(LA_Name=LA_Name.x, everything()) %>% select(-LA_Name.y) %>%
mutate(SEN_Rank_GLD_2018_LA_CoL=!!SEN_gap_Rank_GLD_2018_LA_CoL_value,
SEN_gap_Rank_GLD_2018_LA_CoL=!!SEN_gap_Rank_GLD_2018_LA_CoL_value)
Rank_change_CoL<- function(LA, LA_SN, Variable, variable_test_LA, test_LA="City of London", variable_name_as_string)
{
is_stats_neighbour<-grepl("SN_Rank", variable_name_as_string)
London_rank<- if_else(grepl("SN_Rank", variable_name_as_string),11,152) # as we know IoS not suppressed
# ie bottom rank is 11 for SN and 152 for LAs
adjusted_variable<- if_else(LA_SN==test_LA,as.double(London_rank),
if_else((Variable>variable_test_LA)&(!is.na(variable_test_LA))&is_stats_neighbour,as.double(Variable-1),
if_else(Variable>variable_test_LA&!is_stats_neighbour,as.double(Variable-1), as.double(Variable)
)))
as.double(adjusted_variable)
#  test<-Variable>variable_test_LA
# # test2 <- !is.na(variable_test_LA))
# # test3<- is_stats_neighbour
# test
#variable_test_LA
# variable_name_as_string
}
Rank_change_CoL(LA_SN="City of London",Variable=13,variable_test_LA = 12,variable_name_as_string="SEN_S_Rank_GLD_2018_LA")
long_data_step1_rev_2_4_1 <- long_data_step1_rev_2_3 %>% mutate_at(vars("SEN_SN_Rank_GLD_2018_LA"),funs(Rank_change_CoL(LA_SN = LA_Name,Variable = .,variable_test_LA = SEN_SN_Rank_GLD_2018_LA_CoL,variable_name_as_string = deparse(substitute(.)))))
long_data_step1_rev_2_4_2 <- long_data_step1_rev_2_4_1 %>% mutate_at(vars("SEN_gap_Rank_GLD_2018_LA"),funs(Rank_change_CoL(LA_SN = LA_Name,Variable = .,variable_test_LA = SEN_Rank_GLD_2018_LA_CoL,variable_name_as_string = deparse(substitute(.)))))
long_data_step1_rev_2_4_3 <- long_data_step1_rev_2_4_2 %>% mutate_at(vars("SEN_Rank_GLD_2018_LA"),funs(Rank_change_CoL(LA_SN = LA_Name,Variable = .,variable_test_LA = SEN_Rank_GLD_2018_LA_CoL,variable_name_as_string = deparse(substitute(.)))))
three_years_data_step1_rev2<- three_years_data_step1 %>%   mutate_at(
#All_Percent_GLD_2018_LA=if_else(LA_Name=="Isles of Scilly",0,All_Percent_GLD_2018_LA),
vars(
#"All_Percent_GLD_2016_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
#"All_Percent_GLD_2017_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
"FSM_Percent_GLD_2016_LA",
"FSM_Percent_GLD_2017_LA",
"All_Other_Percent_GLD_2016_LA",
"All_Other_Percent_GLD_2017_LA",
"SEN_Percent_GLD_2016_LA",
"SEN_Percent_GLD_2017_LA",
"FSM_gap_GLD_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_within_LA",
"FSM_gap_GLD_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2017_LA_gap_within_LA",
#"All_gap_GLD_2016_LA", #in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
# "All_gap_GLD_2017_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
"All_Other_gap_GLD_2016_LA",
"All_Other_gap_GLD_2017_LA",
"SEN_gap_GLD_2016_LA",
"SEN_gap_GLD_2017_LA"
),
funs(Suppress_to_minus9999(LA_Name,selected_LA="Isles of Scilly",.)))  %>%
replace_with_na_at(.vars=c(
#"All_Percent_GLD_2016_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
#"All_Percent_GLD_2017_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
"FSM_Percent_GLD_2016_LA",
"FSM_Percent_GLD_2017_LA",
"All_Other_Percent_GLD_2016_LA",
"All_Other_Percent_GLD_2017_LA",
"SEN_Percent_GLD_2016_LA",
"SEN_Percent_GLD_2017_LA",
"FSM_gap_GLD_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_within_LA",
"FSM_gap_GLD_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2017_LA_gap_within_LA",
#"All_gap_GLD_2016_LA", #in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
# "All_gap_GLD_2017_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
"All_Other_gap_GLD_2016_LA",
"All_Other_gap_GLD_2017_LA",
"SEN_gap_GLD_2016_LA",
"SEN_gap_GLD_2017_LA"
),condition =~.x== -9999)
three_years_data_step1_rev2<- three_years_data_step1 %>%   mutate_at(
#All_Percent_GLD_2018_LA=if_else(LA_Name=="Isles of Scilly",0,All_Percent_GLD_2018_LA),
vars(
#"All_Percent_GLD_2016_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
#"All_Percent_GLD_2017_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
"FSM_Percent_GLD_2016_LA",
"FSM_Percent_GLD_2017_LA",
"All_Other_Percent_GLD_2016_LA",
"All_Other_Percent_GLD_2017_LA",
"SEN_Percent_GLD_2016_LA",
"SEN_Percent_GLD_2017_LA",
"FSM_gap_GLD_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_within_LA",
"FSM_gap_GLD_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2017_LA_gap_within_LA",
#"All_gap_GLD_2016_LA", #in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
# "All_gap_GLD_2017_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
"All_Other_gap_GLD_2016_LA",
"All_Other_gap_GLD_2017_LA",
"SEN_gap_GLD_2016_LA",
"SEN_gap_GLD_2017_LA"
),
funs(Suppress_to_minus9999(LA_Name,selected_LA="Isles of Scilly",.)))  %>%
replace_with_na_at(.vars=c(
#"All_Percent_GLD_2016_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
#"All_Percent_GLD_2017_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
"FSM_Percent_GLD_2016_LA",
"FSM_Percent_GLD_2017_LA",
"All_Other_Percent_GLD_2016_LA",
"All_Other_Percent_GLD_2017_LA",
"SEN_Percent_GLD_2016_LA",
"SEN_Percent_GLD_2017_LA",
"FSM_gap_GLD_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_within_LA",
"FSM_gap_GLD_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2017_LA_gap_within_LA",
#"All_gap_GLD_2016_LA", #in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
# "All_gap_GLD_2017_LA",#in APS_GLD_ELG_UNDERLYING_DATA_2013_2018.
"All_Other_gap_GLD_2016_LA",
"All_Other_gap_GLD_2017_LA",
"SEN_gap_GLD_2016_LA",
"SEN_gap_GLD_2017_LA"
),condition =~.x== -9999)
# For City of London suppress relevant GLD variables
three_years_data_step1_rev3  <- three_years_data_step1_rev2 %>% mutate_at(vars("SEN_Percent_GLD_2018_LA",
"SEN_gap_GLD_2018_LA",
"SEN_Percent_GLD_2017_LA",
"SEN_gap_GLD_2017_LA",
"FSM_Percent_GLD_2016_LA",
"All_Other_Percent_GLD_2016_LA",
"SEN_Percent_GLD_2016_LA",
"FSM_gap_GLD_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_within_LA",
"All_Other_gap_GLD_2016_LA",
"SEN_gap_GLD_2016_LA"),
funs(Suppress_to_minus9999(LA_Name,selected_LA="City of London",.))) %>%
replace_with_na_at(.vars=c("SEN_Percent_GLD_2018_LA",
"SEN_gap_GLD_2018_LA",
"SEN_Percent_GLD_2017_LA",
"SEN_gap_GLD_2017_LA",
"FSM_Percent_GLD_2016_LA",
"All_Other_Percent_GLD_2016_LA",
"SEN_Percent_GLD_2016_LA",
"FSM_gap_GLD_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_FSM_Nat_Av",
"FSM_gap_GLD_2016_LA_gap_within_LA",
"All_Other_gap_GLD_2016_LA",
"SEN_gap_GLD_2016_LA")
,condition =~.x== -9999)
# For City of London suppress relevant AoL variables
three_years_data_step1_rev4  <- three_years_data_step1_rev3 %>% mutate_at(vars("All_Other_Percent_AoL_CL_2016_LA",
"FSM_Percent_AoL_CL_2016_LA",
"All_Other_Percent_AoL_Lit_2016_LA",
"FSM_Percent_AoL_Lit_2016_LA",
"All_Other_Percent_AoL_Mat_2016_LA",
"FSM_Percent_AoL_Mat_2016_LA",
"FSM_gap_AoL_CL_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_within_LA",
"FSM_gap_AoL_CL_2016_LA_gap_FSM_Nat_Av",
"All_Other_gap_AoL_CL_2016_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_within_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_FSM_Nat_Av",
"All_Other_gap_AoL_Lit_2016_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_within_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_FSM_Nat_Av",
"All_Other_gap_AoL_Mat_2016_LA"
),funs(Suppress_to_minus9999(LA_Name,selected_LA="City of London",.)))   %>%
#),funs(Suppress_to_minus9999(LA_Name,selected_LA %in% c("City of London","Kensington and Chelsea"),.)))   %>% #doesn't work
replace_with_na_at(.vars=c("All_Other_Percent_AoL_CL_2016_LA",
#"All_Other_Percent_AoL_CL_2017_LA",
"FSM_Percent_AoL_CL_2016_LA",
#"FSM_Percent_AoL_CL_2017_LA",
"All_Other_Percent_AoL_Lit_2016_LA",
#"All_Other_Percent_AoL_Lit_2017_LA",
"FSM_Percent_AoL_Lit_2016_LA",
#"FSM_Percent_AoL_Lit_2017_LA",
"All_Other_Percent_AoL_Mat_2016_LA",
#"All_Other_Percent_AoL_Mat_2017_LA",
"FSM_Percent_AoL_Mat_2016_LA",
#"FSM_Percent_AoL_Mat_2017_LA",
#"FSM_gap_AoL_CL_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_CL_2017_LA_gap_within_LA",
"FSM_gap_AoL_CL_2016_LA_gap_within_LA",
#"FSM_gap_AoL_CL_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_CL_2017_LA",
"All_Other_gap_AoL_CL_2016_LA",
#"FSM_gap_AoL_Lit_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_Lit_2017_LA_gap_within_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_within_LA",
#"FSM_gap_AoL_Lit_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_Lit_2017_LA",
"All_Other_gap_AoL_Lit_2016_LA",
#"FSM_gap_AoL_Mat_2017_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_All_Other_Nat_Av",
#"FSM_gap_AoL_Mat_2017_LA_gap_within_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_within_LA",
#"FSM_gap_AoL_Mat_2017_LA_gap_FSM_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_FSM_Nat_Av",
#"All_Other_gap_AoL_Mat_2017_LA",
"All_Other_gap_AoL_Mat_2016_LA"
),condition =~.x== -9999)
# For City of London suppress relevant AoL variables
three_years_data_step1_rev5  <- three_years_data_step1_rev4 %>% mutate_at(vars("All_Other_Percent_AoL_CL_2016_LA",
"FSM_Percent_AoL_CL_2016_LA",
"All_Other_Percent_AoL_Lit_2016_LA",
"FSM_Percent_AoL_Lit_2016_LA",
"All_Other_Percent_AoL_Mat_2016_LA",
"FSM_Percent_AoL_Mat_2016_LA",
"FSM_gap_AoL_CL_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_within_LA",
"FSM_gap_AoL_CL_2016_LA_gap_FSM_Nat_Av",
"All_Other_gap_AoL_CL_2016_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_within_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_FSM_Nat_Av",
"All_Other_gap_AoL_Lit_2016_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_within_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_FSM_Nat_Av",
"All_Other_gap_AoL_Mat_2016_LA"
),funs(Suppress_to_minus9999(LA_Name,selected_LA="Kensington and Chelsea",.)))   %>%
#),funs(Suppress_to_minus9999(LA_Name,selected_LA %in% c("City of London","Kensington and Chelsea"),.)))   %>% #doesn't work
replace_with_na_at(.vars=c("All_Other_Percent_AoL_CL_2016_LA",
"FSM_Percent_AoL_CL_2016_LA",
"All_Other_Percent_AoL_Lit_2016_LA",
"FSM_Percent_AoL_Lit_2016_LA",
"All_Other_Percent_AoL_Mat_2016_LA",
"FSM_Percent_AoL_Mat_2016_LA",
"FSM_gap_AoL_CL_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_CL_2016_LA_gap_within_LA",
"FSM_gap_AoL_CL_2016_LA_gap_FSM_Nat_Av",
"All_Other_gap_AoL_CL_2016_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Lit_2016_LA_gap_within_LA",
"FSM_gap_AoL_Lit_2016_LA_gap_FSM_Nat_Av",
"All_Other_gap_AoL_Lit_2016_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_All_Other_Nat_Av",
"FSM_gap_AoL_Mat_2016_LA_gap_within_LA",
"FSM_gap_AoL_Mat_2016_LA_gap_FSM_Nat_Av",
"All_Other_gap_AoL_Mat_2016_LA"
),condition =~.x== -9999)
three_years_data_step1_rev6<- three_years_data_step1_rev5  %>% select(-contains("Rank"))# believe not used anywhere so remove
fwrite(long_data_step1_rev_2_4_3,"../Outputs/combined_long_data_2018_R_v5_postbeta_sup.csv")
fwrite(three_years_data_step1_rev6,"../Outputs/combined_three_years_data_2018_R_v5_postbeta_sup.csv")
shiny::runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
SEN_Percent_GLD_2018_LA
runApp('EY_Dashboard_app_2018/Early_Years_Dashboard_App_v6')
library(shiny); source('//lonnetapp01/asddata/EY-Schools-SEND/EYARU/EY Policy-Quality outcomes and providers/Social Mobility/LA Scorecards/SocialMobDB/R/RunApp2018v6.R')
